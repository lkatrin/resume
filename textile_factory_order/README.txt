Часть большого проекта для текстильной фабрики, разные модули выполняли разные люди при общей базе данных.
В этой части был реализован модуль ЗАКАЗЫ.
Проект выполнялся с помощью pyqt6 и mysql.

Проект представляет собой систему управления заказами для швейного производства с разделением прав доступа.
Клиенты могут создавать заказы и отслеживать их статус,менеджеры — управлять заказами,
назначать исполнителей и редактировать данные заказчиков.

Полный функционал проекта:

1. Авторизация (authorization_window.py)
- Роли пользователей: 
  - Сотрудник (worker) с ролью из таблицы role.
  - Заказчик (customer) с типом из таблицы type_customer.
- Проверка данных: 
  - Валидация логина и пароля в БД.
  - Разделение доступа в зависимости от роли.
- Переход в главное меню: 
  - Передача данных пользователя (ФИО, роль, ID) в MainWindow.

2. Главное меню (main_menu.py)
- Навигация: 
  - Для заказчика: 
    - Создание заказа.
    - Просмотр своих заказов.
  - Для сотрудника: 
    - Просмотр всех заказов.
    - Создание заказов от лица клиентов.
    - Управление незанятыми заказами.
    - Регистрация/редактирование заказчиков.
- Профиль пользователя: 
  - Отображение ФИО, логина, роли.
- Динамический интерфейс: 
  - Изменение пунктов меню в зависимости от роли.

3. Управление заказчиками
- Регистрация (customer_registration.py):
  - Ввод данных: тип (юр./физ. лицо), ФИО, контакты, логин, пароль.
  - Валидация: 
    - Проверка формата телефона (+7XXXXXXXXXX).
    - Проверка email.
    - Уникальность логина (включая таблицу worker).
- Редактирование (customer_redaction.py):
  - Загрузка существующих данных.
  - Обновление информации в БД.
  - Блокировка поля "Компания" для физ. лиц.

4. Работа с заказами
- Для заказчика (myorder_customer.py):
  - Просмотр заказов: 
    - Фильтрация по статусу.
    - Детализация: изделия, материалы, стоимость.
  - Отмена заказов со статусом "Новый".
- Для менеджера (list_orders_manager.py):
  - Просмотр заказов с фильтрацией по статусу.
  - Изменение статуса заказа (например, "Подтвержден", "Отклонен").
  - Назначение себя на незанятые заказы (orders_without_manager.py).
- Создание заказа:
  - Менеджером (new_order.py): 
    - Выбор заказчика из списка.
    - Добавление изделий с указанием материалов (ткань, фурнитура и т.д.).
  - Клиентом (new_order_client.py): 
    - Автоматическая привязка к текущему аккаунту.
    - Аналогичный функционал по добавлению изделий.

5. Взаимодействие с БД (factory_bd.py)
- Основные операции:
  - Получение списка заказов (с фильтрами по менеджеру, статусу, заказчику).
  - Обновление статусов заказов.
  - Назначение менеджера на заказ.
  - Расчет стоимости заказа (поля real_price, price_with_profit).
  - Работа с материалами и типами продукции.
- Подключение: 
  - Используется хост fatima6p.beget.tech с авторизацией по логину/паролю (для безопасности пароль заменен на password).

6. Дополнительные функции
- Валидация данных:
  - Проверка формата телефона, email, обязательных полей.
  - Обработка ошибок БД с выводом в QMessageBox.
- Интерфейс:
  - Единый стиль (цвета, шрифты) для всех окон.
  - Адаптивные таблицы с чередованием цветов строк.
  - Подсказки в полях ввода (например, example@mail.com).
- Логика работы:
  - Закрытие соединений с БД при закрытии окон.
  - Динамическое обновление списков (например, после назначения менеджера).

